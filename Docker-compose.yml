services:
  # FastAPI Backend Service
  backend:
    build: .
    container_name: coe_api_backend
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=blogpost_db
      - DB_USER=postgres
      - DB_PASSWORD=rishi1023
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - DEBUG=True
      - LOG_LEVEL=INFO
    depends_on:
      db:
        condition: service_healthy
    networks:
      - coe_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # PostgreSQL Database Service  
  db:
    image: postgres:15-alpine
    container_name: coe_api_database
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: rishi1023
      POSTGRES_DB: blogpost_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - coe_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d blogpost_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Exporter
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: coe_postgres_exporter
    restart: unless-stopped
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:rishi1023@db:5432/blogpost_db?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - coe_network
    depends_on:
      db:
        condition: service_healthy

  # Prometheus Service
  prometheus:
    image: prom/prometheus:latest
    container_name: coe_prometheus
    ports:
      - "9091:9090"  # Host access
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - coe_network
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:9090/-/ready || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Grafana Service
  grafana:
    image: grafana/grafana:latest
    container_name: coe_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - coe_network
    restart: unless-stopped
    depends_on:
      prometheus:
        condition: service_healthy

# Volumes
volumes:
  postgres_data:
    driver: local

# Networks
networks:
  coe_network:
    driver: bridge
